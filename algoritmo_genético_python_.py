# -*- coding: utf-8 -*-
"""Algoritmo Genético - Python .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Lyo1N60PpBlUr_PRV0ZIlMWe-r-lxwgr
"""



import random

#Função objetivo 
def func(a, b):
  d = round(2*a - 2*a**2 + 6*b - 3*b**2, 2)
  if d == 3.5:
    print('solução =', a, b)
  return round(d, 2) 

#Criação da populção/ Inidividuo 
cromo1 = [round(random.uniform(0, 2), 1), round(random.uniform(0, 2), 1), round(random.uniform(0, 2), 1), round(random.uniform(0, 2), 1), round(random.uniform(0, 2), 1), round(random.uniform(0, 2), 1), round(random.uniform(0, 2), 1), round(random.uniform(0, 2), 1), round(random.uniform(0, 2), 1), round(random.uniform(0, 2), 1)]
cromo2 = [round(random.uniform(0, 2), 1), round(random.uniform(0, 2), 1), round(random.uniform(0, 2), 1), round(random.uniform(0, 2), 1), round(random.uniform(0, 2), 1), round(random.uniform(0, 2), 1), round(random.uniform(0, 2), 1), round(random.uniform(0, 2), 1), round(random.uniform(0, 2), 1), round(random.uniform(0, 2), 1)]
aptidao = []

#Determinação dos individuos mais adaptados/Desempenho dos indivíduos
aptidao.append(func(cromo1[0], cromo2[0]))
aptidao.append(func(cromo1[1], cromo2[1]))
aptidao.append(func(cromo1[2], cromo2[2]))
aptidao.append(func(cromo1[3], cromo2[3]))
aptidao.append(func(cromo1[4], cromo2[4]))
aptidao.append(func(cromo1[5], cromo2[5]))
aptidao.append(func(cromo1[6], cromo2[6]))
aptidao.append(func(cromo1[7], cromo2[7]))
aptidao.append(func(cromo1[8], cromo2[8]))
aptidao.append(func(cromo1[9], cromo2[9]))

#Cruzamento e procriação 
gerac1cromo1 = []
gerac1cromo2 = []
def melhord3():
 n = random.randint(0, 9)
 m = random.randint(0, 9)
 k = random.randint(0, 9)
 if aptidao[n] >= aptidao[m] and aptidao[n] >= aptidao[k]:
   gerac1cromo1.append(cromo1[n])
   gerac1cromo2.append(cromo2[n])
 elif aptidao[m] >= aptidao[n] and aptidao[m] >= aptidao[k]:
   gerac1cromo1.append(cromo1[m])
   gerac1cromo2.append(cromo2[m])  
 elif aptidao[k] >= aptidao[n] and aptidao[k] >= aptidao[m]:
   gerac1cromo1.append(cromo1[k])
   gerac1cromo2.append(cromo2[k]) 

melhord3()
melhord3()
melhord3()
melhord3()
melhord3()
melhord3()
melhord3()
melhord3()
melhord3()
melhord3()


print(gerac1cromo1[0])

#Mutação 
transformad = []
def transf(x, y):
  tr = random.randint(0, 9)
  print(tr)
  if tr > 3:
    x += 0.1
    y += 0.1
  else:
    x = x
    y = y
    

transf(gerac1cromo1[0], gerac1cromo2[0])
print(gerac1cromo1[0])